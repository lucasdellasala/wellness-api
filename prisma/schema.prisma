// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  meals     Meal[]

  @@map("users")
}

model Meal {
  id          String   @id @default(cuid())
  name        String?
  calories    Int
  proteins    Float
  carbs       Float
  fats        Float
  tips        String[]
  aiInsights  String
  imageUrl    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  analysisEventId String?

  @@map("meals")
}

enum MealStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
}

enum MealAnalysisStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
}

model MealAnalysisEvent {
  id        String              @id @default(cuid())
  userId    String
  imageUrl  String
  status    MealAnalysisStatus  @default(PENDING)
  result    Json?
  error     String?
  createdAt DateTime            @default(now())
  updatedAt DateTime            @updatedAt

  @@map("meal_analysis_events")
}
